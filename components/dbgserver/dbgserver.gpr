--
--  Copyright (C) 2014  secunet Security Networks AG
--
--  This program is free software: you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  (at your option) any later version.
--
--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.
--

with "../libxhcidbg/libxhcidbg";
with "../libdebuglog/libdebuglog";
with "../libmusinfo/libmusinfo";
with "generated/dbg_config";

project Dbgserver extends "../component_spark" is

   Src_Dirs :=
     ("../../common/debug",
      "../../common/src",
      "../../common/crash_audit",
      "../../common/strings/impl",
      "../src",
      "generated",
      "src",
      "src/sinks/pcspkr",
      "src/sinks/serial",
      "src/sinks/shmem",
      "src/sinks/xhcidbg");
   Obj_Suffix := "/";

   case dbg_config.dbgserver_sink_serial is
      when "true"  =>
         Src_Dirs   := Src_Dirs & "src/sinks/serial/enabled";
         Obj_Suffix := Obj_Suffix & "serial_enabled";

         case dbg_config.dbgserver_hsuart is
            when "true"  =>
               Src_Dirs := Src_Dirs & "src/sinks/serial/enabled/hsuart";
            when "false" =>
               Src_Dirs := Src_Dirs & "src/sinks/serial/enabled/uart";
         end case;
      when "false" =>
         Src_Dirs   := Src_Dirs & "src/sinks/serial/disabled";
         Obj_Suffix := Obj_Suffix & "serial_disabled";
   end case;

   case dbg_config.dbgserver_sink_shmem is
      when "true"  =>
         Src_Dirs   := Src_Dirs   & "src/sinks/shmem/enabled";
         Obj_Suffix := Obj_Suffix & "_shmem_enabled";
      when "false" =>
         Src_Dirs   := Src_Dirs   & "src/sinks/shmem/disabled";
         Obj_Suffix := Obj_Suffix & "_shmem_disabled";
   end case;

   case dbg_config.dbgserver_sink_xhcidbg is
      when "true"  =>
         Src_Dirs   := Src_Dirs   & "src/sinks/xhcidbg/enabled";
         Obj_Suffix := Obj_Suffix & "_xhcidbg_enabled";
      when "false" =>
         Src_Dirs   := Src_Dirs   & "src/sinks/xhcidbg/disabled";
         Obj_Suffix := Obj_Suffix & "_xhcidbg_disabled";
   end case;

   case dbg_config.dbgserver_sink_pcspkr is
      when "true"  =>
         Src_Dirs   := Src_Dirs   & "src/sinks/pcspkr/enabled";
         Obj_Suffix := Obj_Suffix & "_pcspkr_enabled";
      when "false" =>
         Src_Dirs   := Src_Dirs   & "src/sinks/pcspkr/disabled";
         Obj_Suffix := Obj_Suffix & "_pcspkr_disabled";
   end case;

   for Languages use ("Ada", "Asm");
   for Source_Dirs use Src_Dirs;
   for Object_Dir use "obj/" & Component_Spark.Build_Mode & Obj_Suffix;
   for Exec_Dir use "obj/" & Component_Spark.Build_Mode;
   for Main use ("dbgserver");

end Dbgserver;
