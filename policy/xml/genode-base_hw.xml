<?xml version="1.0"?>
<system>
 <config>
  <boolean name="dbgserver_sink_pcspkr" value="false"/>
  <boolean name="dbgserver_sink_serial" value="true"/>
  <boolean name="dbgserver_sink_shmem" value="false"/>
  <boolean name="dbgserver_sink_xhcidbg" value="false"/>
  <boolean name="pciconf_emulation_enabled" value="false"/>
  <string name="logchannel_size" value="16#0010_0000#"/>
 </config>

 <include href="kernel_diagnostics.xml"/>

 <memory>
  <memory name="crash_audit" physicalAddress="16#1000_0000#" size="16#1000#" caching="UC" type="subject_crash_audit"/>
  <memory name="bios_data_area" physicalAddress="16#0000#" size="16#1000#" caching="UC"/>
  <memory name="base_hw|ram" size="16#5800_0000#" alignment="16#0020_0000#" caching="WB"/>

  <memory name="guest_vm|ram_1" size="16#000a_0000#" caching="WB"/>
  <memory name="guest_vm|ram_2" size="16#0001_7000#" caching="WB"/>
  <memory name="guest_vm|ram_3" size="16#0000_e000#" caching="WB"/>
  <memory name="guest_vm|ram_4" size="16#3ff0_0000#" caching="WB"/>
  <memory name="guest_vm|pcbios_1" size="16#1000#" caching="WB"/>
  <memory name="guest_vm|pcbios_2" size="16#0001_0000#" caching="WB"/>
  <memory name="guest_vm|pcbios_3" size="16#0001_0000#" caching="WB"/>
  <memory name="guest_vm|vmmdev_1" size="16#0040_0000#" caching="WB"/>
  <memory name="guest_vm|vmmdev_2" size="16#4000#" caching="WB"/>
  <memory name="guest_vm|vga_1" size="16#0800_0000#" caching="WB"/>
  <memory name="guest_vm|vga_2" size="16#9000#" caching="WB"/>
  <memory name="guest_vm|acpi" size="16#1000#" caching="WB"/>
 </memory>

 <deviceDomains>
  <domain name="base-hw">
   <memory>
    <memory logical="dma1" physical="base_hw|ram" virtualAddress="16#0d20_0000#" writable="true" executable="false"/>
   </memory>
   <devices>
    <device logical="vesa" physical="vga_compatible_controller_1" mapReservedMemory="true"/>
    <device logical="xhci" physical="usb_controller_1"/>
    <device logical="devs" physical="desktop_devices" mapReservedMemory="true"/>
   </devices>
  </domain>
 </deviceDomains>

 <events>
  <event name="resume_base_hw_1" mode="switch"/>
  <event name="timer_base_hw_1" mode="self"/>
  <event name="trap_to_sm_1" mode="switch"/>
  <event name="guest_vm_preemption_1" mode="switch"/>
  <event name="resume_guest_vm" mode="switch"/>
  <event name="trap_to_base_hw" mode="switch"/>
 </events>

 <channels>
  <channel name="time_info" size="16#1000#"/>
  <channel name="debuglog_subject1" size="$logchannel_size"/>
  <channel name="debuglog_subject4" size="$logchannel_size"/>
 </channels>

 <components>
  <component name="base_hw" profile="vm">
   <provides>
    <memory executable="true" logical="binary" size="16#0d00_0000#" type="subject_binary" virtualAddress="16#0020_0000#" writable="true">
     <file filename="base_hw" offset="none"/>
    </memory>
   </provides>
  </component>
  <component name="guest_vm" profile="vm">
   <provides>
    <memory executable="true" logical="binary" size="16#0001_4000#" type="subject_binary" virtualAddress="16#f000_0000_0000#" writable="true">
     <file filename="sm" offset="none"/>
    </memory>
   </provides>
  </component>
 </components>

 <subjects>
  <include href="subject_time.xml"/>
  <include href="subject_base_hw_sm.xml"/>

  <subject name="base_hw">
   <include href="vcpu_subject_base_hw.xml"/>
   <memory>
    <memory logical="bda" physical="bios_data_area" virtualAddress="16#0000#" writable="true" executable="false"/>
    <memory logical="ram" physical="base_hw|ram" virtualAddress="16#0d20_0000#" writable="true" executable="true"/>
    <memory logical="vm_ram_1" physical="guest_vm|ram_1" virtualAddress="16#0008_9000_0000#" writable="true" executable="true"/>
    <memory logical="vm_ram_2" physical="guest_vm|ram_2" virtualAddress="16#0008_900c_9000#" writable="true" executable="true"/>
    <memory logical="vm_ram_3" physical="guest_vm|ram_3" virtualAddress="16#0008_900e_2000#" writable="true" executable="true"/>
    <memory logical="vm_ram_4" physical="guest_vm|ram_4" virtualAddress="16#0008_9010_0000#" writable="true" executable="true"/>
    <memory logical="vm_pcbios_1" physical="guest_vm|pcbios_1" virtualAddress="16#0008_1000_0000#" writable="true" executable="true"/>
    <memory logical="vm_pcbios_2" physical="guest_vm|pcbios_2" virtualAddress="16#0008_2000_0000#" writable="true" executable="true"/>
    <memory logical="vm_pcbios_3" physical="guest_vm|pcbios_3" virtualAddress="16#0008_3000_0000#" writable="true" executable="true"/>
    <memory logical="vm_vmmdev_1" physical="guest_vm|vmmdev_1" virtualAddress="16#0008_4000_0000#" writable="true" executable="true"/>
    <memory logical="vm_vmmdev_2" physical="guest_vm|vmmdev_2" virtualAddress="16#0008_5000_0000#" writable="true" executable="true"/>
    <memory logical="vm_vga_1" physical="guest_vm|vga_1" virtualAddress="16#0008_6000_0000#" writable="true" executable="true"/>
    <memory logical="vm_vga_2" physical="guest_vm|vga_2" virtualAddress="16#0008_7000_0000#" writable="true" executable="true"/>
    <memory logical="vm_acpi" physical="guest_vm|acpi" virtualAddress="16#0008_8000_0000#" writable="true" executable="true"/>
   </memory>
   <devices>
    <device logical="ps2" physical="ps2">
     <irq logical="kbd_irq" physical="kbd_irq" vector="49"/>
     <irq logical="mouse_irq" physical="mouse_irq" vector="60"/>
     <ioPort logical="port1" physical="port_60"/>
     <ioPort logical="port2" physical="port_64"/>
    </device>
    <device logical="vga" physical="vga"/>
    <device logical="vesa" physical="vga_compatible_controller_1">
     <pci bus="16#00#" device="16#02#" function="0"/>
    </device>
    <device logical="xhci" physical="usb_controller_1"/>
    <device logical="devs" physical="desktop_devices"/>
   </devices>
   <events>
    <source>
     <group name="vmx_exit">
      <default physical="trap_to_sm_1"/>
     </group>
     <group name="vmcall">
      <event id="1" logical="resume_guest_vm" physical="resume_guest_vm"/>
      <event id="31" logical="timer" physical="timer_base_hw_1"/>
     </group>
    </source>
    <target>
     <event logical="resume_after_trap" physical="resume_base_hw_1"/>
     <event logical="timer" physical="timer_base_hw_1">
      <inject_interrupt vector="32"/>
     </event>
     <event logical="guest_vm_trap" physical="trap_to_base_hw">
      <inject_interrupt vector="200"/>
     </event>
     <event logical="guest_vm_preempt" physical="guest_vm_preemption_1">
      <inject_interrupt vector="32"/>
     </event>
    </target>
   </events>
   <monitor>
    <state subject="guest_vm" logical="monitor_state" virtualAddress="16#000f_0000_0000#" writable="true"/>
    <timed_event subject="guest_vm" logical="monitor_timed_event" virtualAddress="16#000e_0001_1000#" writable="true"/>
    <interrupts subject="guest_vm" logical="monitor_interrupts" virtualAddress="16#000f_0001_0000#" writable="true"/>
   </monitor>
   <component ref="base_hw"/>
  </subject>
  <subject name="guest_vm">
   <vcpu>
    <vmx>
     <controls>
      <proc>
       <HLTExiting>1</HLTExiting>
       <INVLPGExiting>0</INVLPGExiting>
       <RDTSCExiting>0</RDTSCExiting>
      </proc>
     </controls>
    </vmx>
   </vcpu>
   <memory>
    <memory logical="vm_ram_1" physical="guest_vm|ram_1" virtualAddress="16#0000#" writable="true" executable="true"/>
    <!-- MMIO 0xa0000, size 0x20000 -->
    <memory logical="vm_vga_2" physical="guest_vm|vga_2" virtualAddress="16#000c_0000#" writable="true" executable="true"/>
    <memory logical="vm_ram_2" physical="guest_vm|ram_2" virtualAddress="16#000c_9000#" writable="true" executable="true"/>
    <memory logical="vm_acpi" physical="guest_vm|acpi" virtualAddress="16#000e_0000#" writable="true" executable="true"/>
    <memory logical="vm_pcbios_1" physical="guest_vm|pcbios_1" virtualAddress="16#000e_1000#" writable="false" executable="true"/>
    <memory logical="vm_ram_3" physical="guest_vm|ram_3" virtualAddress="16#000e_2000#" writable="true" executable="true"/>
    <memory logical="vm_pcbios_2" physical="guest_vm|pcbios_2" virtualAddress="16#000f_0000#" writable="false" executable="true"/>
    <memory logical="vm_ram_4" physical="guest_vm|ram_4" virtualAddress="16#0010_0000#" writable="true" executable="true"/>
    <memory logical="vm_vga_1" physical="guest_vm|vga_1" virtualAddress="16#e000_0000#" writable="true" executable="false"/>
    <memory logical="vm_pcbios_3" physical="guest_vm|pcbios_3" virtualAddress="16#ffff_0000#" writable="false" executable="true"/>
    <memory logical="vm_vmmdev_1" physical="guest_vm|vmmdev_1" virtualAddress="16#f000_0000#" writable="true" executable="true"/>
    <memory logical="vm_vmmdev_2" physical="guest_vm|vmmdev_2" virtualAddress="16#f040_0000#" writable="true" executable="true"/>
   </memory>
   <devices/>
   <events>
    <source>
     <group name="vmx_exit">
      <default physical="trap_to_base_hw"/>
     </group>
     <group name="vmcall">
      <event id="30" logical="preempt" physical="guest_vm_preemption_1"/>
     </group>
    </source>
    <target>
     <event logical="resume_after_trap" physical="resume_guest_vm"/>
    </target>
   </events>
   <component ref="guest_vm"/>
  </subject>

  <include href="subject_dbgserver_genode.xml"/>
 </subjects>

 <scheduling tickRate="10000">
  <majorFrame>
   <cpu id="0">
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
   </cpu>
   <cpu id="1">
    <minorFrame subject="time" ticks="5"/>
    <minorFrame subject="tau0" ticks="5"/>
    <minorFrame subject="dbgserver" ticks="110"/>
   </cpu>
  </majorFrame>
  <majorFrame>
   <cpu id="0">
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
    <minorFrame subject="base_hw" ticks="10"/>
   </cpu>
   <cpu id="1">
    <minorFrame subject="tau0" ticks="20"/>
    <minorFrame subject="dbgserver" ticks="100"/>
   </cpu>
  </majorFrame>
 </scheduling>

</system>
