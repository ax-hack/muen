From 2b8b844c8c25e6b2a8b31e9f532c365799ec7eed Mon Sep 17 00:00:00 2001
From: Reto Buerki <reet@codelabs.ch>
Date: Fri, 13 Dec 2019 16:01:59 +0100
Subject: [PATCH 2/7] Use multiboot module to compare in-memory images

The existing 'multiboot' module is hacked to compare the CSL generated
memory image with the one generated via the existing multiboot loader.
This is used to test image equivalence during CI.

Note: It is assumed that the memory relocator allocates chunks for both
images consecutively. The comparison might fail if uninitialized bytes
exist between memory regions (these will be zero for multiboot and
undefined for CSL).
---
 grub-core/loader/i386/multiboot_mbi.c | 25 ++++++++
 grub-core/loader/multiboot.c          | 90 +++------------------------
 2 files changed, 32 insertions(+), 83 deletions(-)

diff --git a/grub-core/loader/i386/multiboot_mbi.c b/grub-core/loader/i386/multiboot_mbi.c
index ad3cc292f..5f460f92d 100644
--- a/grub-core/loader/i386/multiboot_mbi.c
+++ b/grub-core/loader/i386/multiboot_mbi.c
@@ -36,6 +36,7 @@
 #include <grub/net.h>
 #include <grub/i18n.h>
 #include <grub/lib/cmdline.h>
+#include <grub/loader.h>
 
 #ifdef GRUB_MACHINE_EFI
 #include <grub/efi/efi.h>
@@ -126,6 +127,30 @@ load_kernel (grub_file_t file, const char *filename,
 	grub_memset ((grub_uint8_t *) source + load_size, 0,
 		     header->bss_end_addr - header->load_addr - load_size);
 
+	  grub_uint8_t *start_csl = (grub_uint8_t *)0x100000;
+
+	  int idx, diffs = 0;
+	  grub_uint8_t *start_mb = get_virtual_current_address (ch);
+	  grub_printf("COMPARING(multiboot) start 0x%p, size %x\n", start_csl, load_size);
+	  // compare images
+	  for (idx = 0; idx < load_size; idx++)
+	  {
+		  if (*(start_csl + idx) != *(start_mb + idx)) {
+			  grub_printf("%p:%02x/%02x\n", start_csl + idx,
+					  *(start_csl + idx), *(start_mb + idx));
+			  diffs++;
+		  }
+	  }
+	  grub_printf("\n %u bytes differ, %u bytes checked, \n", diffs, load_size);
+	  if (diffs == 0) {
+		  grub_printf("OK: Image identical\n");
+		  return GRUB_ERR_NONE;
+	  } else {
+		  grub_printf("ERROR: Diff detected\n");
+		  grub_loader_unset ();
+		  return GRUB_ERR_TEST_FAILURE;
+	  }
+
       grub_multiboot_payload_eip = header->entry_addr;
       return GRUB_ERR_NONE;
     }
diff --git a/grub-core/loader/multiboot.c b/grub-core/loader/multiboot.c
index 4a98d7082..83e28965f 100644
--- a/grub-core/loader/multiboot.c
+++ b/grub-core/loader/multiboot.c
@@ -133,83 +133,6 @@ GRUB_MULTIBOOT (set_video_mode) (void)
 #endif
 #endif
 
-#ifdef grub_relocator_efi_boot
-static void
-efi_boot (struct grub_relocator *rel,
-	  grub_uint32_t target)
-{
-#ifdef GRUB_USE_MULTIBOOT2
-  struct grub_relocator_efi_state state_efi = MULTIBOOT2_EFI_INITIAL_STATE;
-#else
-  struct grub_relocator_efi_state state_efi = MULTIBOOT_EFI_INITIAL_STATE;
-#endif
-  state_efi.MULTIBOOT_EFI_ENTRY_REGISTER = GRUB_MULTIBOOT (payload_eip);
-  state_efi.MULTIBOOT_EFI_MBI_REGISTER = target;
-
-  grub_relocator_efi_boot (rel, state_efi);
-}
-#else
-#define grub_efi_is_finished	1
-static void
-efi_boot (struct grub_relocator *rel __attribute__ ((unused)),
-	  grub_uint32_t target __attribute__ ((unused)))
-{
-}
-#endif
-
-#if defined (__i386__) || defined (__x86_64__)
-static void
-normal_boot (struct grub_relocator *rel, struct grub_relocator32_state state)
-{
-  grub_relocator32_boot (rel, state, 0);
-}
-#else
-static void
-normal_boot (struct grub_relocator *rel, struct grub_relocator32_state state)
-{
-  grub_relocator32_boot (rel, state);
-}
-#endif
-
-static grub_err_t
-grub_multiboot_boot (void)
-{
-  grub_err_t err;
-
-#ifdef GRUB_USE_MULTIBOOT2
-  struct grub_relocator32_state state = MULTIBOOT2_INITIAL_STATE;
-#else
-  struct grub_relocator32_state state = MULTIBOOT_INITIAL_STATE;
-#endif
-  state.MULTIBOOT_ENTRY_REGISTER = GRUB_MULTIBOOT (payload_eip);
-
-  err = GRUB_MULTIBOOT (make_mbi) (&state.MULTIBOOT_MBI_REGISTER);
-
-  if (err)
-    return err;
-
-  if (grub_efi_is_finished)
-    normal_boot (GRUB_MULTIBOOT (relocator), state);
-  else
-    efi_boot (GRUB_MULTIBOOT (relocator), state.MULTIBOOT_MBI_REGISTER);
-
-  /* Not reached.  */
-  return GRUB_ERR_NONE;
-}
-
-static grub_err_t
-grub_multiboot_unload (void)
-{
-  GRUB_MULTIBOOT (free_mbi) ();
-
-  grub_relocator_unload (GRUB_MULTIBOOT (relocator));
-  GRUB_MULTIBOOT (relocator) = NULL;
-
-  grub_dl_unref (my_mod);
-
-  return GRUB_ERR_NONE;
-}
-
 static grub_uint64_t highest_load;
 
 #define MULTIBOOT_LOAD_ELF64
@@ -289,7 +212,7 @@ grub_cmd_multiboot (grub_command_t cmd __attribute__ ((unused)),
   grub_file_t file = 0;
   grub_err_t err;
 
-  grub_loader_unset ();
+  //grub_loader_unset ();
 
   highest_load = 0;
 
@@ -322,8 +245,10 @@ grub_cmd_multiboot (grub_command_t cmd __attribute__ ((unused)),
     return grub_error (GRUB_ERR_BAD_ARGUMENT, N_("filename expected"));
 
   file = grub_file_open (argv[0], GRUB_FILE_TYPE_MULTIBOOT_KERNEL);
-  if (! file)
-    return grub_errno;
+  if (! file) {
+	  grub_loader_unset ();
+	  return grub_errno;
+  }
 
   grub_dl_ref (my_mod);
 
@@ -340,9 +265,8 @@ grub_cmd_multiboot (grub_command_t cmd __attribute__ ((unused)),
   if (err)
     goto fail;
 
-  GRUB_MULTIBOOT (set_bootdev) ();
-
-  grub_loader_set (grub_multiboot_boot, grub_multiboot_unload, 0);
+  //GRUB_MULTIBOOT (set_bootdev) ();
+  //grub_loader_set (grub_multiboot_boot, grub_multiboot_unload, 0);
 
  fail:
   if (file)
-- 
2.20.1

